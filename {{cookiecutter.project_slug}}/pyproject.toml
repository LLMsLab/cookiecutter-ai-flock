[tool.poetry]
name = "oneassistrag"
version = "0.1.0"
description = "A short description of the project."
authors = ["gmm <youremail@example.com>"]
license = "Internal Use Only"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
#langchain = "0.0.285"
unstructured = { version = "0.10.12", extras = ["pdf"] }
chromadb = "0.4.10"
azureaiml = "1.10.0"
gradio = "3.44.3"
wandb = "0.15.10"
transformers = "4.33.1"
datasets = "2.14.5"
sentencetransformers = "2.2.2"
spacy = "3.6.1"
aiohttp="3.9.1"
aiosignal="1.3.1"
aiostream="0.5.2"
annotatedtypes="0.6.0"
anyio="3.7.1"
asynctimeout="4.0.3"
attrs="23.1.0"
azureaicontentsafety="1.0.0b1"
azureaiformrecognizer="3.2.0"
azurecommon="1.1.28"
azurecore="1.29.5"
azurecosmos="4.5.0"
azureidentity="1.12.0"
azuresearchdocuments="11.4.0b8"
azurestorageblob="12.14.1"
azurestoragequeue="12.5.0"
beautifulsoup4="4.12.0"
blinker="1.7.0"
blobfile="2.1.1"
cachetools="5.3.2"
certifi="2023.11.17"
cffi="1.16.0"
chardet="5.1.0"
charsetnormalizer="3.3.2"
click="8.1.7"
contourpy="1.2.0"
cryptography="41.0.7"
cycler="0.12.1"
dataclassesjson="0.5.14"
Deprecated="1.2.14"
exceptiongroup="1.2.0"
fakeuseragent="1.1.3"
filelock="3.13.1"
Flask="2.3.2"
fonttools="4.45.1"
frozenlist="1.4.0"
fsspec="2023.10.0"
googleapicore="2.14.0"
googleauth="2.23.4"
googleapiscommonprotos="1.61.0"
greenlet="3.0.1"
idna="3.6"
isodate="0.6.1"
itsdangerous="2.1.2"
Jinja2="3.1.2"
joblib="1.3.2"
jsonpatch="1.33"
jsonpointer="2.4"
kiwisolver="1.4.5"
langchain="0.0.341"
langchaincore="0.0.6"
langsmith="0.0.67"
llamaindex="0.8.62"
lxml="4.9.3"
MarkupSafe="2.1.3"
marshmallow="3.20.1"
matplotlib="3.8.0"
msal="1.25.0"
msalextensions="1.0.0"
msrest="0.7.1"
multidict="6.0.4"
mypyextensions="1.0.0"
nestasyncio="1.5.8"
nltk="3.8.1"
numexpr="2.8.7"
numpy="1.26.2"
oauthlib="3.2.2"
openai="0.27.8"
opencensus="0.11.3"
opencensuscontext="0.1.3"
opencensusextazure="1.1.9"
packaging="23.2"
pandas="2.1.3"
Pillow="10.1.0"
portalocker="2.8.2"
prompttoolkit="3.0.39"
protobuf="4.25.1"
psutil="5.9.6"
pyasn1="0.5.1"
pyasn1modules="0.3.0"
pycparser="2.21"
pycryptodomex="3.19.0"
pydantic="2.5.2"
pydantic_core="2.14.5"
PyJWT="2.8.0"
pyparsing="3.1.1"
pythondateutil="2.8.2"
pythondocx="0.8.11"
pythondotenv="1.0.0"
pytz="2023.3.post1"
PyYAML="6.0.1"
regex="2023.10.3"
requests="2.31.0"
requestsoauthlib="1.3.1"
rsa="4.9"
seaborn="0.13.0"
six="1.16.0"
sniffio="1.3.0"
soupsieve="2.5"
SQLAlchemy="2.0.23"
tenacity="8.2.3"
tiktoken="0.5.1"
tqdm="4.66.1"
typinginspect="0.9.0"
typing_extensions="4.8.0"
tzdata="2023.3"
urllib3="1.26.18"
wcwidth="0.2.12"
Werkzeug="3.0.1"
wrapt="1.16.0"
yarl="1.9.3"

[tool.poetry.devdependencies]
black = { version = "23.7.0", extras = ["jupyter"] }
hydracore = "1.3.2"
ipykernel = "6.24.0"
mkdocs = "1.4.3"
mkdocsgitrevisiondatelocalizedplugin = "1.2.0"
mkdocsmaterial = "9.1.19"
mkdocsmermaid2plugin = "1.0.1"
mkdocstringspython = "1.2.0"
precommit = "3.3.3"
pymarkdownlnt = "0.9.13.4"
pytest = "7.4.0"
pytestbenchmark = "4.0.0"
pytestxdist = "3.3.1"
rope = "1.9.0"
ruff = "0.0.278"



[tool.poetry.group.dev.dependencies]
toml = "^0.10.2"
nbconvert = "^7.8.0"

[buildsystem]
requires = ["poetrycore>=1.0.0"]
buildbackend = "poetry.core.masonry.api"

[tool.black]
linelength = 79
targetversion = ['py39']
include = """
(
    ^notebooks/.*\\.ipynb$
  | ^src/.*\\.py$
)
"""

[tool.ruff]
select = ["ALL"]
# To ignore all rules with a common prefix use *
ignore = ["ANN001", "ANN002", "ANN003", "ANN101", "ANN102", "ANN201", "ANN202",
"ANN204", "ANN205", "ANN206", "ANN401"]

# Decrease the maximum line length to 79 characters.
linelength = 79
# To opt in to linting Jupyter Notebook
# The include parameter is for Jupyter Notebooks and not
# for Jupyter Notebook in VS Code. Jupyter Notebook in
# VSCode isn't supported yet:
# https://github.com/astralsh/ruffvscode/issues/256
# See also discussion on Discord
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]

[tool.pymarkdown]
disablerules = ["MD046"]
